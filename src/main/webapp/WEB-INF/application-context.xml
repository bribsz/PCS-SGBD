<?xml version="1.0" encoding="UTF-8"?>

 
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx" xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
        
        
        
<!--       <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> -->
<!--       <property name="dataSource" ref="dataSource" /> -->
<!--        <property name="packagesToScan" value="com.app.sqli.entities" /> -->
<!--       <property name="jpaVendorAdapter"> -->
<!--          <beans:bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" /> -->
<!--       </property> -->
<!--       <property name="jpaProperties"> -->
<!--          <props> -->
<!--             <prop key="hibernate.hbm2ddl.auto" value="create" /> -->
<!--             <prop key="hibernate.dialect" value="org.hibernate.dialect.MySQL5Dialect" /> -->
<!--          </props> -->
<!--       </property> -->
<!--    </bean> -->

<!--    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> -->
<!--       <property name="driverClassName" value="com.mysql.jdbc.Driver" /> -->
<!--       <property name="url" value="jdbc:mysql://localhost:3306/sqli" /> -->
<!--       <property name="username" value="root" /> -->
<!--       <property name="password" value="" /> -->
<!--    </bean> -->


<!--     <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"> -->
<!--       <property name="entityManagerFactory" ref="entityManagerFactoryBean" /> -->
<!--    </bean> -->


<!--    <tx:annotation-driven /> -->
<!--         -->
		        
<!-- 		<beans:bean id="entityManagerFactory" class="org.springframework.orm.jpa.JpaTransactionManager"> -->
<!-- 		<beans:property name="entityManagerFactory" ref="entityManagerFactory" /> -->
<!-- 		</beans:bean> -->
		
		<!-- This does the trick! -->
<!-- 		<tx:annotation-driven transaction-manager="entityManagerFactory" /> -->
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
<!--         <beans:bean id="dataSource" -->
<!-- 		       class="org.springframework.jdbc.datasource.DriverManagerDataSource"> -->
<!-- 		    <beans:property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/> -->
<!-- 		    <beans:property name="url" value="jdbc:mysql://localhost:3306/delirandodefomeds"/> -->
<!-- 		    <beans:property name="username" value="root"/> -->
<!--  		    <beans:property name="password" value="delirando123!@#"/> -->
<!-- 		</beans:bean> -->

	<!--jpa(hibernate) configuration -->
	<context:component-scan base-package="repositorio" />
	<context:component-scan base-package="dao" />
	  <context:component-scan base-package="org.zkoss.zkspringessentials.controller,org.zkoss.spring.beans.zkcomponents"></context:component-scan>
	
<!--     <beans:bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean"> -->
<!--         <beans:property name="persistenceUnitName" value="entityManagerFactory" /> -->
<!--     </beans:bean> -->
    
<!--     <beans:bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager" /> -->
<!--     <tx:annotation-driven transaction-manager="transactionManager" /> -->
    
<!--      <beans:bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/> -->


    <!-- Declare os serviÃ§os conforme o modelo abaixo -->
<!--     <beans:bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" /> -->

    <beans:bean id="servicoUsuario" class="dao.ServicoUsuario" scope="singleton" />
<!--     <beans:bean id="repositorioBase" class="repositorio.RepositorioUsuario" scope="singleton" /> -->
    <beans:bean id="servicoEstabelecimento" class="dao.ServicoEstabelecimento" scope="singleton" />

    <beans:bean id="serviceLocator" class="dao.ServiceLocator">
        <beans:property name="servicoUsuario">
            <beans:ref bean="servicoUsuario" />
      </beans:property>
	<beans:property name="servicoEstabelecimento">
            <beans:ref bean="servicoEstabelecimento" />
      </beans:property>
    </beans:bean>
    
     <beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <beans:property name="host" value="smtp.gmail.com"/>
        <beans:property name="port" value="465"/>
        <beans:property name="username" value="violet00punk@gmail.com"/>
        <beans:property name="password" value="PearL1928375Jam18"/>
        <beans:property name="javaMailProperties">
            <beans:props>
                <beans:prop key="mail.transport.protocol">smtp</beans:prop>
                <beans:prop key="mail.smtp.auth">true</beans:prop>
                <beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
                <beans:prop key="mail.smtp.starttls.required">true</beans:prop>
                <beans:prop key="mail.debug">true</beans:prop>
                
                <beans:prop key="mail.quitwait">false</beans:prop>
                <beans:prop key="mail.smtp.ssl.enable">true</beans:prop>
               <beans:prop key="mail.imap.ssl.socketFactory.fallback">false</beans:prop>
               <beans:prop key="mail.smtp.ssl.socketFactory.class">com.fintech.modules.base.util.mail.MailSSLSocketFactory</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>
    
    
    <!--  tell spring to use annotation based congfigurations -->
	<!-- It allow us to use @Autowire, @Required and @Qualifier annotations. -->
	
	<context:annotation-config />
    
</beans:beans>